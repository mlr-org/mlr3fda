[{"path":"https://mlr3fda.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Fischer. Author, maintainer. Maximilian Muecke. Author.","code":""},{"path":"https://mlr3fda.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fischer S, Muecke M (2023). mlr3fda: Extending mlr3 functional data analysis. R package version 0.0.0.9000, https://github.com/mlr-org/mlr3fda, https://mlr3fda.mlr-org.com.","code":"@Manual{,   title = {mlr3fda: Extending mlr3 to functional data analysis},   author = {Sebastian Fischer and Maximilian Muecke},   year = {2023},   note = {R package version 0.0.0.9000, https://github.com/mlr-org/mlr3fda},   url = {https://mlr3fda.mlr-org.com}, }"},{"path":"https://mlr3fda.mlr-org.com/index.html","id":"mlr3fda","dir":"","previous_headings":"","what":"Extending mlr3 to functional data analysis","title":"Extending mlr3 to functional data analysis","text":"Package Website: dev Extending mlr3 functional data.","code":""},{"path":"https://mlr3fda.mlr-org.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extending mlr3 to functional data analysis","text":"package yet CRAN can install development version mlr3fda GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mlr-org/mlr3fda\")"},{"path":"https://mlr3fda.mlr-org.com/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"Extending mlr3 to functional data analysis","text":"mlr3fda still early stage development. Nonetheless, exported functions tested work.","code":""},{"path":"https://mlr3fda.mlr-org.com/index.html","id":"what-is-mlr3fda","dir":"","previous_headings":"","what":"What is mlr3fda?","title":"Extending mlr3 to functional data analysis","text":"goal mlr3fda extend mlr3 functional data. achieved adding support functional feature types providing preprocessing PipeOps operates functional columns. representing functiona data, tfd_reg tfd_irreg datatypes tf package used available loading mlr3fda: datatypes can used represent regular irregular functional data respectively. Currently, Learners directly operate functional data available, necessary first extract scalar features functional columns.","code":"library(mlr3fda) mlr_reflections$task_feature_types[c(\"tfr\", \"tfi\")] ##         tfr         tfi  ##   \"tfd_reg\" \"tfd_irreg\""},{"path":"https://mlr3fda.mlr-org.com/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Extending mlr3 to functional data analysis","text":"start predefined \"dti\" (Diffusion Tensor Imaging), see tsk(\"dti\")$help() details. Besides scalar columns, task also contains two functional columns cca rcst. train model task first need extract scalar features functions. showcast extracting mean value. can combined Lerner GraphLearner first extracts features trains model. also default behavior explicitly clarity’s sake.","code":"task = tsk(\"dti\") task ## <TaskRegr:dti> (340 x 4): Diffusion Tensor Imaging (DTI) ## * Target: pasat ## * Properties: groups ## * Features (3): ##   - tfi (2): cca, rcst ##   - fct (1): sex ## * Groups: subject_id library(mlr3pipelines)  po_fmean = po(\"ffs\", features = \"mean\")  task_fmean = po_fmean$train(list(task))[[1L]] task_fmean$head() ##    pasat    sex  cca_mean rcst_mean ## 1:    31 female 0.4493332 0.4968519 ## 2:    31 female 0.4441292 0.4810724 ## 3:    29 female 0.4257795 0.5102722 ## 4:    34 female 0.4418538 0.5453188 ## 5:    37 female 0.4700994 0.5471177 ## 6:    40 female 0.4873356 0.4969408 # split data into train and test set ids = partition(task, stratify = FALSE)  # define a Graph and convert it to a GraphLearner graph = po(\"ffs\", features = \"mean\", drop = TRUE) %>>%   po(\"learner\", learner = lrn(\"regr.rpart\"))  glrn = as_learner(graph)  # train the graph learner on the train set glrn$train(task, row_ids = ids$train)  # make predictions on the test set glrn$predict(task, row_ids = ids$test) ## <PredictionRegr> for 111 observations: ##     row_ids truth response ##          11    48 49.99174 ##          12    40 49.99174 ##          13    43 52.42105 ## ---                        ##         324    57 52.42105 ##         325    57 41.30769 ##         326    60 49.99174"},{"path":"https://mlr3fda.mlr-org.com/index.html","id":"bugs-questions-feedback","dir":"","previous_headings":"","what":"Bugs, Questions, Feedback","title":"Extending mlr3 to functional data analysis","text":"mlr3fda free open source software project encourages participation feedback. issues, questions, suggestions feedback, please hesitate open “issue” GitHub page! case problems / bugs, often helpful provide “minimum working example” showcases behaviour (don’t worry bug obvious). Please understand resources project limited: response may sometimes delayed days, feature suggestions may rejected deemed tangential vision behind project.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/dti.html","id":null,"dir":"Reference","previous_headings":"","what":"The dti dataset — dti","title":"The dti dataset — dti","text":"See mlr_tasks_dti description dataset.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/dti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The dti dataset — dti","text":"","code":"data(dti)"},{"path":"https://mlr3fda.mlr-org.com/reference/dti.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The dti dataset — dti","text":"data frame 340 rows 5 variables","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/fuel.html","id":null,"dir":"Reference","previous_headings":"","what":"The fuel dataset — fuel","title":"The fuel dataset — fuel","text":"See mlr_tasks_fuel description dataset.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/fuel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The fuel dataset — fuel","text":"","code":"data(fuel)"},{"path":"https://mlr3fda.mlr-org.com/reference/fuel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The fuel dataset — fuel","text":"data frame 129 rows 4 variables","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr3fda-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3fda: Extending mlr3 to functional data analysis — mlr3fda-package","title":"mlr3fda: Extending mlr3 to functional data analysis — mlr3fda-package","text":"Provides extensions functional data analysis mlr3.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr3fda-package.html","id":"data-types","dir":"Reference","previous_headings":"","what":"Data types","title":"mlr3fda: Extending mlr3 to functional data analysis — mlr3fda-package","text":"extend mlr3 functional data, two data types tf package added: tfd_irreg - Irregular functional data, .e. functions observed potentiall different inputs observation. tfd_reg - Regular functional data, .e. functions observed input individual. Lang M, Binder M, Richter J, Schratz P, Pfisterer F, Coors S, Au Q, Casalicchio G, Kotthoff L, Bischl B (2019). “mlr3: modern object-oriented machine learning framework R.” Journal Open Source Software. doi:10.21105/joss.01903 , https://joss.theoj.org/papers/10.21105/joss.01903.","code":""},{"path":[]},{"path":"https://mlr3fda.mlr-org.com/reference/mlr3fda-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3fda: Extending mlr3 to functional data analysis — mlr3fda-package","text":"Maintainer: Sebastian Fischer sebf.fischer@gmail.com (ORCID) Authors: Maximilian Muecke muecke.maximilian@gmail.com (ORCID)","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":null,"dir":"Reference","previous_headings":"","what":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"class extracts simple features functional columns. Note operates values actually observed interpolate.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"R6Class object inheriting PipeOpTaskPreprocSimple","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"drop :: logical(1) Whether drop original functional features keep extracted features. Note remove features backend, active column role feature. Initial value TRUE. affect_columns :: function | Selector | NULL  columns PipeOpTaskPreproc operate . See Selector example functions. Defaults NULL, selects features. features :: list() | character()  list features extract. element can either function string. element function requires following arguments: arg value returns numeric. string elements, following predefined features available: \"mean\", \"max\",\"min\",\"slope\",\"median\",\"var\". Initial c(\"mean\", \"max\", \"min\", \"slope\", \"median\", \"var\") left :: numeric()  left boundary window. Initial -Inf. window specified values >=left <=right kept computations. right :: numeric()  right boundary window. Initial Inf.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"naming","dir":"Reference","previous_headings":"","what":"Naming","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"new names generally append _{feature} corresponding column name. However can lead name clashes existing columns. solved follows: column called \"x\" feature \"mean\", corresponding new column called \"x_mean\". case duplicates, unique names obtained using make.unique() warning given.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"methods inherited PipeOpTaskPreprocSimple/ PipeOp","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFFS","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"methods-1","dir":"Reference","previous_headings":"","what":"Methods","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"PipeOpFFS$new() PipeOpFFS$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"","code":"PipeOpFFS$new(id = \"ffs\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"id (character(1)) Identifier resulting object, default \"ffs\". param_vals (named list) List hyperparameter settings, overwriting hyperparameter settings ","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"","code":"PipeOpFFS$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_ffs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(F)unctional (F)eature (S)imple — mlr_pipeops_ffs","text":"","code":"library(mlr3pipelines) task = tsk(\"fuel\") po_fmean = po(\"ffs\", features = \"mean\") task_fmean = po_fmean$train(list(task))[[1L]]  # add more than one feature pop = po(\"ffs\", features = c(\"mean\", \"median\", \"var\")) task_features = pop$train(list(task))[[1L]]  # add a custom feature po_custom = po(\"ffs\", features = list(mean = function(arg, value) mean(value, na.rm = TRUE))) task_custom = po_custom$train(list(task))[[1L]]"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Flattens Functional Columns — mlr_pipeops_flatfun","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"Convert regular functional features (e.g. individuals observed time-points) new columns, one input value function.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"parameters parameters inherited PipeOpTaskPreprocSimple, well following parameters: affect_columns :: function | Selector Selector function, takes Task argument returns character features keep. flattening applied columns. See Selector example functions. Default selector_all(), selects functional` features.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"naming","dir":"Reference","previous_headings":"","what":"Naming","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"new names generally append _1, ...,  corresponding column name. However can lead name clashes existing columns. solved follows: column called \"x\" feature \"mean\", corresponding new column called \"x_mean\". case duplicates, unique names obtained using make.unique() warning given.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFlatFun","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"PipeOpFlatFun$new() PipeOpFlatFun$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"","code":"PipeOpFlatFun$new(id = \"flatfun\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"id ()character(1)) Identifier resulting object, default \"ffe\". param_vals (named list) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"","code":"PipeOpFlatFun$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_pipeops_flatfun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flattens Functional Columns — mlr_pipeops_flatfun","text":"","code":"library(mlr3pipelines) task = tsk(\"fuel\") pop = po(\"flatfun\") task_flat = pop$train(list(task))"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_dti.html","id":null,"dir":"Reference","previous_headings":"","what":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"dataset contains two functional covariates three scalar covariate. goal predict PASAT score. pasat represents PASAT score vist. subject_id represents subject ID. cca represents fractional anisotropy tract profiles corpus callosum. sex indicates subject's sex. rcst represents fractional anisotropy tract profiles right corticospinal tract. Rows containing NAs removed. subset full dataset, contained package refund.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_dti.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"R6::R6Class inheriting TaskRegr.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_dti.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"","code":"mlr_tasks$get(\"dti\") tsk(\"dti\")"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_dti.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"Goldsmith, Jeff, Bobb, Jennifer, Crainiceanu, M C, Caffo, Brian, Reich, Daniel (2011). “Penalized functional regression.” Journal Computational Graphical Statistics, 20(4), 830--851. Brain dataset courtesy Gordon Kindlmann Scientific Computing Imaging Institute, University Utah, Andrew Alexander, W. M. Keck Laboratory Functional Brain Imaging Behavior, University Wisconsin-Madison.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_fuel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuel Regression Task — mlr_tasks_fuel","title":"Fuel Regression Task — mlr_tasks_fuel","text":"dataset contains two functional covariates one scalar covariate. goal predict heat value fuel based ultraviolet radiation spectrum infrared ray radiation one scalar column called h2o. subset full dataset, contained package FDboost.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_fuel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fuel Regression Task — mlr_tasks_fuel","text":"R6::R6Class inheriting TaskRegr.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_fuel.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"Fuel Regression Task — mlr_tasks_fuel","text":"","code":"mlr_tasks$get(\"fuel\") tsk(\"fuel\")"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_fuel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuel Regression Task — mlr_tasks_fuel","text":"Brockhaus, Sarah, Scheipl, Fabian, Hothorn, Torsten, Greven, Sonja (2015). “functional linear array model.” Statistical Modelling, 15(3), 279--300.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_phoneme.html","id":null,"dir":"Reference","previous_headings":"","what":"Phoneme Classification Task — mlr_tasks_phoneme","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"task contains single functional covariate 5 equally big classes (aa, ao, dcl, iy, sh). aim predict class phoneme functional, log-periodogram. subset full dataset, contained package fda.usc.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_phoneme.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"R6::R6Class inheriting TaskClassif.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_phoneme.html","id":"construction","dir":"Reference","previous_headings":"","what":"Construction","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"","code":"mlr_tasks$get(\"phoneme\") tsk(\"phoneme\")"},{"path":"https://mlr3fda.mlr-org.com/reference/mlr_tasks_phoneme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"Ferraty, Frédric, Vieu, Philippe (2003). “Curves discrimination: nonparametric functional approach.” Computational Statistics & Data Analysis, 44(1-2), 161--173.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/phoneme.html","id":null,"dir":"Reference","previous_headings":"","what":"The phoneme dataset — phoneme","title":"The phoneme dataset — phoneme","text":"See mlr_tasks_phoneme description dataset.","code":""},{"path":"https://mlr3fda.mlr-org.com/reference/phoneme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The phoneme dataset — phoneme","text":"","code":"data(phoneme)"},{"path":"https://mlr3fda.mlr-org.com/reference/phoneme.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The phoneme dataset — phoneme","text":"data frame 250 rows 2 variables","code":""}]
