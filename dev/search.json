[{"path":"https://mlr3fda.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian Fischer. Author, maintainer. Maximilian Mücke. Author. Fabian Scheipl. Contributor. Bernd Bischl. Contributor.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fischer S, Mücke M (2025). mlr3fda: Extending 'mlr3' Functional Data Analysis. R package version 0.2.0-9000, https://github.com/mlr-org/mlr3fda, https://mlr3fda.mlr-org.com.","code":"@Manual{,   title = {mlr3fda: Extending 'mlr3' to Functional Data Analysis},   author = {Sebastian Fischer and Maximilian Mücke},   year = {2025},   note = {R package version 0.2.0-9000, https://github.com/mlr-org/mlr3fda},   url = {https://mlr3fda.mlr-org.com}, }"},{"path":"https://mlr3fda.mlr-org.com/dev/index.html","id":"mlr3fda","dir":"","previous_headings":"","what":"Extending mlr3 to Functional Data Analysis","title":"Extending mlr3 to Functional Data Analysis","text":"Package website: release | dev Extending mlr3 functional data.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extending mlr3 to Functional Data Analysis","text":"Install last release CRAN: Install development version GitHub:","code":"install.packages(\"mlr3fda\") # install.packages(\"pak\") pak::pak(\"mlr-org/mlr3fda\")"},{"path":"https://mlr3fda.mlr-org.com/dev/index.html","id":"what-is-mlr3fda","dir":"","previous_headings":"","what":"What is mlr3fda?","title":"Extending mlr3 to Functional Data Analysis","text":"goal mlr3fda extend mlr3 functional data. achieved adding support functional feature types providing preprocessing PipeOps operates functional columns. representing functional data, tfd_reg tfd_irreg datatypes tf package used available loading mlr3fda: datatypes can used represent regular irregular functional data respectively. Currently, Learners directly operate functional data available, necessary first extract scalar features functional columns.","code":"library(mlr3fda) mlr_reflections$task_feature_types[c(\"tfr\", \"tfi\")] #>         tfr         tfi  #>   \"tfd_reg\" \"tfd_irreg\""},{"path":"https://mlr3fda.mlr-org.com/dev/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Extending mlr3 to Functional Data Analysis","text":"start predefined dti (Diffusion Tensor Imaging) task, see tsk(\"dti\")$help() details. Besides scalar columns, task also contains two functional columns cca rcst. train model task first need extract scalar features functions. illustrate extracting mean value. can combined Lerner GraphLearner first extracts features trains model.","code":"task = tsk(\"dti\") task #> <TaskRegr:dti> (340 x 4): Diffusion Tensor Imaging (DTI) #> * Target: pasat #> * Properties: groups #> * Features (3): #>   - tfi (2): cca, rcst #>   - fct (1): sex #> * Groups: subject_id po_fmean = po(\"fda.extract\", features = \"mean\")  task_fmean = po_fmean$train(list(task))[[1L]] task_fmean$head() #>    pasat    sex  cca_mean rcst_mean #> 1:    31 female 0.4493332 0.4968519 #> 2:    31 female 0.4441292 0.4810724 #> 3:    29 female 0.4257795 0.5102722 #> 4:    34 female 0.4418538 0.5453188 #> 5:    37 female 0.4700994 0.5471177 #> 6:    40 female 0.4873356 0.4969408 # split data into train and test set ids = partition(task)  # define a Graph and convert it to a GraphLearner graph = po(\"fda.extract\", features = \"mean\", drop = TRUE) %>>%   po(\"learner\", learner = lrn(\"regr.rpart\"))  glrn = as_learner(graph)  # train the graph learner on the train set glrn$train(task, row_ids = ids$train)  # make predictions on the test set glrn$predict(task, row_ids = ids$test) #> <PredictionRegr> for 111 observations: #>  row_ids truth response #>       11    48 49.99174 #>       12    40 49.99174 #>       13    43 52.42105 #>      ---   ---      --- #>      324    57 52.42105 #>      325    57 41.30769 #>      326    60 49.99174"},{"path":[]},{"path":"https://mlr3fda.mlr-org.com/dev/index.html","id":"bugs-questions-feedback","dir":"","previous_headings":"","what":"Bugs, Questions, Feedback","title":"Extending mlr3 to Functional Data Analysis","text":"mlr3fda free open source software project encourages participation feedback. issues, questions, suggestions feedback, please hesitate open “issue” GitHub page! case problems / bugs, often helpful provide “minimum working example” showcases behaviour (don’t worry bug obvious). Please understand resources project limited: response may sometimes delayed days, feature suggestions may rejected deemed tangential vision behind project.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Extending mlr3 to Functional Data Analysis","text":"development R-package supported Roche Diagonstics R&D.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/dti.html","id":null,"dir":"Reference","previous_headings":"","what":"The dti dataset — dti","title":"The dti dataset — dti","text":"See mlr_tasks_dti description dataset.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/dti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The dti dataset — dti","text":"","code":"data(dti)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/dti.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The dti dataset — dti","text":"data frame 340 rows 5 variables","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/fuel.html","id":null,"dir":"Reference","previous_headings":"","what":"The fuel dataset — fuel","title":"The fuel dataset — fuel","text":"See mlr_tasks_fuel description dataset.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/fuel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The fuel dataset — fuel","text":"","code":"data(fuel)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/fuel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The fuel dataset — fuel","text":"data frame 129 rows 4 variables","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr3fda-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3fda: Extending 'mlr3' to Functional Data Analysis — mlr3fda-package","title":"mlr3fda: Extending 'mlr3' to Functional Data Analysis — mlr3fda-package","text":"Extends 'mlr3' ecosystem functional analysis adding support irregular regular functional data defined 'tf' package. package provides 'PipeOps' preprocessing functional columns extracting scalar features, thereby allowing standard machine learning algorithms applied afterwards. Available operations include simple functional features mean maximum, smoothing, interpolation, flattening, functional 'PCA'.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr3fda-package.html","id":"data-types","dir":"Reference","previous_headings":"","what":"Data types","title":"mlr3fda: Extending 'mlr3' to Functional Data Analysis — mlr3fda-package","text":"extend mlr3 functional data, two data types tf package added: tfd_irreg - Irregular functional data, .e. functions observed potentially different inputs observation. tfd_reg - Regular functional data, .e. functions observed input individual. Lang M, Binder M, Richter J, Schratz P, Pfisterer F, Coors S, Au Q, Casalicchio G, Kotthoff L, Bischl B (2019). “mlr3: modern object-oriented machine learning framework R.” Journal Open Source Software. doi:10.21105/joss.01903 , https://joss.theoj.org/papers/10.21105/joss.01903.","code":""},{"path":[]},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr3fda-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3fda: Extending 'mlr3' to Functional Data Analysis — mlr3fda-package","text":"Maintainer: Sebastian Fischer sebf.fischer@gmail.com (ORCID) Authors: Maximilian Mücke muecke.maximilian@gmail.com (ORCID) contributors: Fabian Scheipl fabian.scheipl@googlemail.com (ORCID) [contributor] Bernd Bischl bernd_bischl@gmx.net (ORCID) [contributor]","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"Calculates cross-correlation two functional vectors using tf::tf_crosscor(). Note operates regular data cross-correlation assumes column domain. apply PipeOp irregualr data, convert regular grid first using PipeOpFDAInterpol. need change domain columns, use PipeOpFDAScaleRange.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"parameters parameters inherited PipeOpTaskPreprocSimple, well following parameters: arg :: numeric() Grid use cross-correlation.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFDACor","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"PipeOpFDACor$new() PipeOpFDACor$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"","code":"PipeOpFDACor$new(id = \"fda.cor\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"id (character(1)) Identifier resulting object, default \"fda.cor\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"","code":"PipeOpFDACor$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-Correlation of Functional Data — mlr_pipeops_fda.cor","text":"","code":"set.seed(1234L) dt = data.table(y = 1:100, x1 = tf::tf_rgp(100L), x2 = tf::tf_rgp(100L)) task = as_task_regr(dt, target = \"y\") po_cor = po(\"fda.cor\") task_cor = po_cor$train(list(task))[[1L]] task_cor #> <TaskRegr:dt> (100 x 2) #> * Target: y #> * Properties: - #> * Features (1): #>   - dbl (1): x1_x2_cor"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"class extracts simple features functional columns. Note operates values actually observed interpolate.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"parameters parameters inherited PipeOpTaskPreprocSimple, well following parameters: drop :: logical(1) Whether drop original functional features keep extracted features. Note remove features backend, active column role feature. Initial value TRUE. features :: list() | character() list features extract. element can either function string. element function requires following arguments: arg value returns numeric. string elements, following predefined features available: \"mean\", \"max\",\"min\",\"slope\",\"median\",\"var\". Initial c(\"mean\", \"max\", \"min\", \"slope\", \"median\", \"var\") left :: numeric() left boundary window. Initial -Inf. window specified values >=left <=right kept computations. right :: numeric() right boundary window. Initial Inf.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"naming","dir":"Reference","previous_headings":"","what":"Naming","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"new names generally append _{feature} corresponding column name. However can lead name clashes existing columns. solved follows: column called \"x\" feature \"mean\", corresponding new column called \"x_mean\". case duplicates, unique names obtained using make.unique() warning given.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFDAExtract","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"PipeOpFDAExtract$new() PipeOpFDAExtract$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"","code":"PipeOpFDAExtract$new(id = \"fda.extract\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"id (character(1)) Identifier resulting object, default \"fda.extract\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"","code":"PipeOpFDAExtract$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts Simple Features from Functional Columns — mlr_pipeops_fda.extract","text":"","code":"task = tsk(\"fuel\") po_fmean = po(\"fda.extract\", features = \"mean\") task_fmean = po_fmean$train(list(task))[[1L]]  # add more than one feature pop = po(\"fda.extract\", features = c(\"mean\", \"median\", \"var\")) task_features = pop$train(list(task))[[1L]]  # add a custom feature po_custom = po(\"fda.extract\",   features = list(mean = function(arg, value) mean(value, na.rm = TRUE)) ) task_custom = po_custom$train(list(task))[[1L]] task_custom #> <TaskRegr:fuel> (129 x 4): Spectral Data of Fossil Fuels #> * Target: heatan #> * Properties: - #> * Features (3): #>   - dbl (3): NIR_mean, UVVIS_mean, h20"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"Flattens Functional Columns — mlr_pipeops_fda.flatten","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"Convert regular functional features (e.g. individuals observed time-points) new columns, one input value function.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"parameters parameters inherited PipeOpTaskPreprocSimple.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"naming","dir":"Reference","previous_headings":"","what":"Naming","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"new names generally append _1, ...,  corresponding column name. However can lead name clashes existing columns. solved follows: column called \"x\" feature \"mean\", corresponding new column called \"x_mean\". case duplicates, unique names obtained using make.unique() warning given.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFDAFlatten","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"PipeOpFDAFlatten$new() PipeOpFDAFlatten$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"","code":"PipeOpFDAFlatten$new(id = \"fda.flatten\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"id (character(1)) Identifier resulting object, default \"fda.flatten\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"","code":"PipeOpFDAFlatten$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.flatten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flattens Functional Columns — mlr_pipeops_fda.flatten","text":"","code":"task = tsk(\"fuel\") pop = po(\"fda.flatten\") task_flat = pop$train(list(task))"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"PipeOp applies functional principal component analysis (FPCA) functional columns extracts principal components features. done using (truncated) weighted SVD. apply PipeOp irregular data, convert regular grid first using PipeOpFDAInterpol. details, see tf::tfb_fpc(), called internally.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"parameters parameters inherited PipeOpTaskPreproc, well following parameters: pve :: numeric(1) percentage variance explained retained. Default 0.995. n_components :: integer(1) number principal components extract. parameter initialized Inf.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"naming","dir":"Reference","previous_headings":"","what":"Naming","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"new names generally append _pc_{number} corresponding column name. column called \"x\" three principcal components, corresponding new columns called \"x_pc_1\", \"x_pc_2\", \"x_pc_3\".","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> PipeOpFPCA","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"PipeOpFPCA$new() PipeOpFPCA$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"","code":"PipeOpFPCA$new(id = \"fda.fpca\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"id (character(1)) Identifier resulting object, default \"fda.fpca\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"","code":"PipeOpFPCA$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.fpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional Principal Component Analysis — mlr_pipeops_fda.fpca","text":"","code":"task = tsk(\"fuel\") po_fpca = po(\"fda.fpca\", n_components = 3L) task_fpca = po_fpca$train(list(task))[[1L]] task_fpca$data() #>       heatan    h20   NIR_pc_1   NIR_pc_2     NIR_pc_3 UVVIS_pc_1 UVVIS_pc_2 #>        <num>  <num>      <num>      <num>        <num>      <num>      <num> #>   1: 26.7810 2.3000  7.5675043  1.1371827 -0.377501250  11.000976 -2.7804661 #>   2: 27.4720 3.0000  6.2793462  1.9345782  0.160548831  -9.298016 -1.7955553 #>   3: 23.8400 2.0002  0.2348390 -0.1721228 -0.024101132  -3.078812 -0.6114645 #>   4: 18.1680 1.8500  0.2913332  0.2052379  0.040952119  -5.349049 -0.7030112 #>   5: 17.5170 2.3898  1.1406877  1.2563331  0.001074654  -8.497281 -1.2413718 #>  ---                                                                         #> 125: 23.8340 2.1100  1.6980728  0.9841985  0.041623661  -6.427319 -0.2898928 #> 126: 11.8050 1.6200 -4.0420811  2.2340299 -0.029562942 -10.843930 -0.0918478 #> 127:  8.8315 1.4200 -5.5013835  2.8333813 -0.034304440 -12.227632 -0.1838102 #> 128: 11.3450 1.4800  2.1809306  1.4395300 -0.397523197   5.871679 -1.0021267 #> 129: 28.9940 2.5000  1.9734804 -0.1998806  0.034337704  -6.893096 -1.4463943 #>       UVVIS_pc_3 #>            <num> #>   1:  0.13667224 #>   2: -0.46762503 #>   3: -0.27479445 #>   4:  0.08631440 #>   5: -0.19140105 #>  ---             #> 125: -0.02865269 #> 126:  0.56113685 #> 127:  1.11134683 #> 128:  1.01323166 #> 129: -0.81054907"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"Interpolate functional features (e.g. individuals observed different time-points) common grid. useful want compare functional features across observations. interpolation done using tf package. See tfd() details.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"parameters parameters inherited PipeOpTaskPreprocSimple, well following parameters: grid :: character(1) | numeric() grid use interpolation. grid numeric, must sequence values use grid single value specifies number points use grid, requires left right specified latter case. grid character, must one : \"union\": option creates grid based union argument points provided functional features. means argument points across features \\(t_1, t_2, ..., t_n\\), grid combined unique set points. option generally used argument points vary across observations  common grid needed comparison analysis. \"intersect\": Creates grid using intersection argument points feature. grid includes points common across functional features, facilitating direct comparison shared set points. \"minmax\": Generates grid within range maximum minimum argument points minimum maximum argument points across features. bounded grid encapsulates argument point range common features. Note: regular functional data effect argument points . Initial value \"union\". method :: character(1) Defaults \"linear\". One : \"linear\": applies linear interpolation without extrapolation (see tf::tf_approx_linear()). \"spline\": applies cubic spline interpolation (see tf::tf_approx_spline()). \"fill_extend\": applies linear interpolation constant extrapolation (see tf::tf_approx_fill_extend()). \"locf\": applies \"last observation carried forward\" interpolation (see tf::tf_approx_locf()). \"nocb\": applies \"next observation carried backward\" interpolation (see tf::tf_approx_nocb()). left :: numeric() left boundary window. window specified values >=left <=right kept computations. right :: numeric() right boundary window.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFDAInterpol","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"PipeOpFDAInterpol$new() PipeOpFDAInterpol$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"","code":"PipeOpFDAInterpol$new(id = \"fda.interpol\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"id (character(1)) Identifier resulting object, default \"fda.interpol\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"","code":"PipeOpFDAInterpol$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.interpol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate Functional Columns — mlr_pipeops_fda.interpol","text":"","code":"task = tsk(\"fuel\") pop = po(\"fda.interpol\") task_interpol = pop$train(list(task))[[1L]] task_interpol$data() #>       heatan    h20                        NIR                      UVVIS #>        <num>  <num>                  <tfd_reg>                  <tfd_reg> #>   1: 26.7810 2.3000 ▇▇▇█████████████████████▇▇ ▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇███████ #>   2: 27.4720 3.0000 ▆▇▇▇▇▇▇▇▇█████████████████ ▂▂▁▂▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃ #>   3: 23.8400 2.0002 ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅ ▄▃▃▃▃▃▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▄▄▄▄▄ #>   4: 18.1680 1.8500 ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅ ▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▄▃▃ #>   5: 17.5170 2.3898 ▄▅▅▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃ #>  ---                                                                      #> 125: 23.8340 2.1100 ▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▃▃▃▃▃▃▃▃▃▃▂▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃ #> 126: 11.8050 1.6200 ▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▅▅▅▅▅▅▆ ▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂ #> 127:  8.8315 1.4200 ▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▆ ▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂ #> 128: 11.3450 1.4800 ▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▇▇▇▇▇▆▆▆▆▆▆ ▆▆▆▆▆▆▆▆▅▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆ #> 129: 28.9940 2.5000 ▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":null,"dir":"Reference","previous_headings":"","what":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"Linearly transform domain functional data lower upper. formula \\(x' = offset + x * scale\\), \\(scale\\) \\((upper - lower) / (max(x) - min(x))\\) \\(offset\\) \\(-min(x) * scale + lower\\). transformation applied training prediction.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"parameters parameters inherited PipeOpTaskPreproc, well following parameters: lower :: numeric(1) Target value smallest item input data. Initialized 0. uppper :: numeric(1) Target value greatest item input data. Initialized 1.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> PipeOpFDAScaleRange","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"PipeOpFDAScaleRange$new() PipeOpFDAScaleRange$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"","code":"PipeOpFDAScaleRange$new(id = \"fda.scalerange\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"id (character(1)) Identifier resulting object, default \"fda.scalerange\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"","code":"PipeOpFDAScaleRange$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.scalerange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linearly Transform the Domain of Functional Data — mlr_pipeops_fda.scalerange","text":"","code":"task = tsk(\"fuel\") po_scale = po(\"fda.scalerange\", lower = -1, upper = 1) task_scale = po_scale$train(list(task))[[1L]] task_scale$data() #>       heatan    h20                        NIR                      UVVIS #>        <num>  <num>                  <tfd_reg>                  <tfd_reg> #>   1: 26.7810 2.3000 ▇▇▇█████████████████████▇▇ ▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇███████ #>   2: 27.4720 3.0000 ▆▇▇▇▇▇▇▇▇█████████████████ ▂▂▁▂▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃ #>   3: 23.8400 2.0002 ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅ ▄▃▃▃▃▃▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▄▄▄▄▄ #>   4: 18.1680 1.8500 ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅ ▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▄▃▃ #>   5: 17.5170 2.3898 ▄▅▅▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃ #>  ---                                                                      #> 125: 23.8340 2.1100 ▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▃▃▃▃▃▃▃▃▃▃▂▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃ #> 126: 11.8050 1.6200 ▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▅▅▅▅▅▅▆ ▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂ #> 127:  8.8315 1.4200 ▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▆ ▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂ #> 128: 11.3450 1.4800 ▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▇▇▇▇▇▆▆▆▆▆▆ ▆▆▆▆▆▆▆▆▅▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆ #> 129: 28.9940 2.5000 ▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"Smoothes functional data using tf::tf_smooth(). preprocessing operator similar PipeOpFDAInterpol, however interpolate unobserved x-values, rather smooths observed values.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"parameters parameters inherited PipeOpTaskPreprocSimple, well following parameters: method :: character(1) One : \"lowess\": locally weighted scatterplot smoothing (default) \"rollmean\": rolling mean \"rollmedian\": rolling meadian \"savgol\":  Savitzky-Golay filtering methods \"lowess\" ignore non-equidistant arg values. args :: named list() List named arguments passed tf_smooth(). See help page tf_smooth() default values. verbose :: logical(1) Whether print messages transformation. initialized FALSE.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFDASmooth","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"PipeOpFDASmooth$new() PipeOpFDASmooth$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"","code":"PipeOpFDASmooth$new(id = \"fda.smooth\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"id (character(1)) Identifier resulting object, default \"fda.smooth\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"","code":"PipeOpFDASmooth$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smoothing Functional Columns — mlr_pipeops_fda.smooth","text":"","code":"task = tsk(\"fuel\") po_smooth = po(\"fda.smooth\", method = \"rollmean\", args = list(k = 5)) task_smooth = po_smooth$train(list(task))[[1L]] task_smooth #> <TaskRegr:fuel> (129 x 4): Spectral Data of Fossil Fuels #> * Target: heatan #> * Properties: - #> * Features (3): #>   - tfr (2): NIR, UVVIS #>   - dbl (1): h20 task_smooth$data(cols = c(\"NIR\", \"UVVIS\")) #>                             NIR                      UVVIS #>                       <tfd_reg>                  <tfd_reg> #>   1: ▇▇▇█████████████████████▇▇ ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇█████████ #>   2: ▆▇▇▇▇▇▇▇▇█████████████████ ▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▃▃▃▃▃ #>   3: ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅ ▃▃▃▃▃▃▃▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▄▄▄▄ #>   4: ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅ ▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃ #>   5: ▄▅▅▅▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▂▂▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃ #>  ---                                                       #> 125: ▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆ ▂▂▃▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃▃▃▃▃ #> 126: ▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▅▅▅▅▅▆ ▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂ #> 127: ▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▄▅▅▅▆ ▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂ #> 128: ▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▇▇▇▆▆▆▆▆▆▆ ▆▆▆▆▆▆▆▆▆▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆ #> 129: ▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▅▅▅▅ ▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃▃▃▃▃▃"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"PipeOp extracts time series features functional columns. details, see tsfeatures::tsfeatures(), called internally.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"parameters","dir":"Reference","previous_headings":"","what":"Parameters","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"parameters parameters inherited PipeOpTaskPreprocSimple, well following parameters: features :: character() Function names return numeric vectors features. features returned functions must named return one feature. Default c(\"frequency\", \"stl_features\", \"entropy\", \"acf_features\"). scale :: logical(1) TRUE, data scaled mean 0 sd 1 features computed. Default TRUE. trim :: logical(1) TRUE, data trimmed trim_amount features computed. Values larger trim_amount absolute value set NA. Default FALSE. trim_amount :: numeric(1) Default level trimming. Default 0.1. parallel :: logical(1) TRUE, features computed parallel. Default FALSE. multiprocess :: function future package use parallel processing. Default future::multisession(). na.action :: function handle missing values. Default stats::na.pass().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"naming","dir":"Reference","previous_headings":"","what":"Naming","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"new names generally append _{feature} corresponding column name. column called \"x\" feature \"trend\", corresponding new column called \"x_trend\".","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"mlr3pipelines::PipeOp -> mlr3pipelines::PipeOpTaskPreproc -> mlr3pipelines::PipeOpTaskPreprocSimple -> PipeOpFDATsfeatures","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"mlr3pipelines::PipeOp$help() mlr3pipelines::PipeOp$predict() mlr3pipelines::PipeOp$print() mlr3pipelines::PipeOp$train()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"PipeOpFDATsfeatures$new() PipeOpFDATsfeatures$clone()","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"Initializes new instance Class.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"","code":"PipeOpFDATsfeatures$new(id = \"fda.tsfeats\", param_vals = list())"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"id (character(1)) Identifier resulting object, default \"fda.tsfeats\". param_vals (named list()) List hyperparameter settings, overwriting hyperparameter settings otherwise set construction. Default list().","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"objects class cloneable method.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"","code":"PipeOpFDATsfeatures$clone(deep = FALSE)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_pipeops_fda.tsfeats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time Series Feature Extraction — mlr_pipeops_fda.tsfeats","text":"","code":"task = tsk(\"fuel\") po_tsfeats = po(\"fda.tsfeats\") task_tsfeats = po_tsfeats$train(list(task))[[1L]] task_tsfeats$data() #>       heatan    h20 NIR_frequency NIR_nperiods NIR_seasonal_period NIR_trend #>        <num>  <num>         <num>        <num>               <num>     <num> #>   1: 26.7810 2.3000             1            0                   1 0.9546922 #>   2: 27.4720 3.0000             1            0                   1 0.9515743 #>   3: 23.8400 2.0002             1            0                   1 0.4707549 #>   4: 18.1680 1.8500             1            0                   1 0.4779991 #>   5: 17.5170 2.3898             1            0                   1 0.9507122 #>  ---                                                                         #> 125: 23.8340 2.1100             1            0                   1 0.8778792 #> 126: 11.8050 1.6200             1            0                   1 0.9854779 #> 127:  8.8315 1.4200             1            0                   1 0.9887717 #> 128: 11.3450 1.4800             1            0                   1 0.9562442 #> 129: 28.9940 2.5000             1            0                   1 0.8044784 #>         NIR_spike NIR_linearity NIR_curvature  NIR_e_acf1 NIR_e_acf10 #>             <num>         <num>         <num>       <num>       <num> #>   1: 5.092984e-07      1.500377   -14.8389900  0.08526800  0.13922801 #>   2: 6.047324e-07     13.551188    -5.1228861  0.04333781  0.06594578 #>   3: 9.909298e-05     -8.992664    -3.7895780 -0.36900748  0.29693031 #>   4: 4.928023e-05      6.689307    -3.8887742 -0.10463336  0.19071080 #>   5: 6.500488e-07     14.045622    -4.3742672  0.18067626  0.09144276 #>  ---                                                                  #> 125: 5.229296e-06     14.009846    -3.3695527  0.15252180  0.18735242 #> 126: 3.639621e-08     15.134587    -0.2588765  0.19727503  0.20779722 #> 127: 3.976177e-08     15.038312    -0.1175876  0.43423412  0.27618845 #> 128: 5.638686e-07     11.562683    -8.9000714  0.18090095  0.09866772 #> 129: 7.539249e-06    -12.302347    -4.8001860 -0.19585687  0.08648780 #>      NIR_entropy NIR_x_acf1 NIR_x_acf10 NIR_diff1_acf1 NIR_diff1_acf10 #>            <num>      <num>       <num>          <num>           <num> #>   1:   0.4354773  0.9069888   6.3605955     -0.2832035      0.37528302 #>   2:   0.2939412  0.9448758   7.8253925     -0.4984864      0.36126344 #>   3:   0.6530189  0.2826531   2.0955036     -0.7039771      0.72744609 #>   4:   0.8348614  0.3648791   0.8041568     -0.5993595      0.72452181 #>   5:   0.3665353  0.9154091   6.6681478     -0.3014810      0.14010207 #>  ---                                                                   #> 125:   0.3783612  0.8836760   5.9622264     -0.2487911      0.26465533 #> 126:   0.2542462  0.9616638   7.7381442     -0.5169663      0.65119007 #> 127:   0.0923419  0.9692264   7.7931485     -0.2257876      0.06959872 #> 128:   0.3504391  0.9495463   7.8098652     -0.3017364      0.17580374 #> 129:   0.2084854  0.7670506   5.7345844     -0.5114536      0.29116684 #>      NIR_diff2_acf1 NIR_diff2_acf10 UVVIS_frequency UVVIS_nperiods #>               <num>           <num>           <num>          <num> #>   1:     -0.5342972       0.6742914               1              0 #>   2:     -0.6633171       0.5959168               1              0 #>   3:     -0.7866512       0.9116270               1              0 #>   4:     -0.7539921       1.1019418               1              0 #>   5:     -0.6114086       0.4473425               1              0 #>  ---                                                               #> 125:     -0.5366052       0.5611325               1              0 #> 126:     -0.7609619       1.1970879               1              0 #> 127:     -0.6044396       0.4192549               1              0 #> 128:     -0.6131724       0.5282163               1              0 #> 129:     -0.6604822       0.4903499               1              0 #>      UVVIS_seasonal_period UVVIS_trend  UVVIS_spike UVVIS_linearity #>                      <num>       <num>        <num>           <num> #>   1:                     1   0.9392390 1.503863e-06       10.552105 #>   2:                     1   0.8320405 2.371308e-05        9.967401 #>   3:                     1   0.7324108 1.782489e-05        8.067557 #>   4:                     1   0.6591754 3.880087e-05        7.817542 #>   5:                     1   0.7990575 2.365003e-05        9.251109 #>  ---                                                                #> 125:                     1   0.4516040 9.644443e-05        6.383468 #> 126:                     1   0.6914674 3.511260e-05        2.346512 #> 127:                     1   0.8352613 8.696230e-06        1.220885 #> 128:                     1   0.8974968 5.003478e-06        3.381766 #> 129:                     1   0.7180091 6.170982e-05        9.689281 #>      UVVIS_curvature UVVIS_e_acf1 UVVIS_e_acf10 UVVIS_entropy UVVIS_x_acf1 #>                <num>        <num>         <num>         <num>        <num> #>   1:       3.7969671   0.06234423    0.14352149     0.3430382    0.9268348 #>   2:       2.9073728  -0.12952783    0.08974614     0.4686135    0.8322983 #>   3:       1.6726579  -0.12604541    0.15486072     0.6220675    0.6844840 #>   4:       4.5641515  -0.21621644    0.12689752     0.6280994    0.5695714 #>   5:       3.9977271  -0.29746795    0.18589166     0.2662301    0.7274064 #>  ---                                                                       #> 125:       3.7901989  -0.01400302    0.07658932     0.6899361    0.4432345 #> 126:       7.9806922  -0.21722795    0.16418124     0.6601140    0.5810357 #> 127:       9.8332792  -0.30735123    0.28247539     0.3755616    0.7721900 #> 128:       9.2982058  -0.18280897    0.07571742     0.4438987    0.8695996 #> 129:       0.3354961  -0.19728333    0.18618097     0.4433417    0.6908904 #>      UVVIS_x_acf10 UVVIS_diff1_acf1 UVVIS_diff1_acf10 UVVIS_diff2_acf1 #>              <num>            <num>             <num>            <num> #>   1:      7.025376       -0.3361110         0.3484453       -0.4994596 #>   2:      5.930650       -0.4541526         0.3318020       -0.6050046 #>   3:      3.739534       -0.4730931         0.3110636       -0.6450409 #>   4:      3.620160       -0.6062612         0.5471917       -0.7394589 #>   5:      4.917010       -0.6055341         0.5175728       -0.6662655 #>  ---                                                                   #> 125:      1.452620       -0.4243995         0.2306197       -0.5893079 #> 126:      3.120828       -0.5156116         0.5919048       -0.6730118 #> 127:      4.787938       -0.6121137         0.6976292       -0.6873167 #> 128:      6.199741       -0.5181048         0.3134932       -0.6955121 #> 129:      4.286336       -0.4140705         0.3492405       -0.5288576 #>      UVVIS_diff2_acf10 #>                  <num> #>   1:         0.5223420 #>   2:         0.6000084 #>   3:         0.5107427 #>   4:         0.8566489 #>   5:         0.6403891 #>  ---                   #> 125:         0.3937492 #> 126:         1.0841297 #> 127:         0.9018225 #> 128:         0.6023695 #> 129:         0.5288989"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_dti.html","id":null,"dir":"Reference","previous_headings":"","what":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"dataset contains two functional covariates three scalar covariate. goal predict PASAT score. pasat represents PASAT score vist. subject_id represents subject ID. cca represents fractional anisotropy tract profiles corpus callosum. sex indicates subject's sex. rcst represents fractional anisotropy tract profiles right corticospinal tract. Rows containing NAs removed. subset full dataset, contained package refund.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_dti.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"R6::R6Class inheriting mlr3::TaskRegr.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_dti.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"dti\") tsk(\"dti\")"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_dti.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"Task type: “regr” Dimensions: 340x4 Properties: “groups” Missings: FALSE Target: “pasat” Features: “cca”, “rcst”, “sex”","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_dti.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diffusion Tensor Imaging (DTI) Regression Task — mlr_tasks_dti","text":"Goldsmith, Jeff, Bobb, Jennifer, Crainiceanu, M C, Caffo, Brian, Reich, Daniel (2011). “Penalized functional regression.” Journal Computational Graphical Statistics, 20(4), 830–851. Brain dataset courtesy Gordon Kindlmann Scientific Computing Imaging Institute, University Utah, Andrew Alexander, W. M. Keck Laboratory Functional Brain Imaging Behavior, University Wisconsin-Madison.","code":""},{"path":[]},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_fuel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuel Regression Task — mlr_tasks_fuel","title":"Fuel Regression Task — mlr_tasks_fuel","text":"dataset contains two functional covariates one scalar covariate. goal predict heat value fuel based ultraviolet radiation spectrum infrared ray radiation one scalar column called h2o. subset full dataset, contained package FDboost.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_fuel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fuel Regression Task — mlr_tasks_fuel","text":"R6::R6Class inheriting mlr3::TaskRegr.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_fuel.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Fuel Regression Task — mlr_tasks_fuel","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"fuel\") tsk(\"fuel\")"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_fuel.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Fuel Regression Task — mlr_tasks_fuel","text":"Task type: “regr” Dimensions: 129x4 Properties: - Missings: FALSE Target: “heatan” Features: “NIR”, “UVVIS”, “h20”","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_fuel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fuel Regression Task — mlr_tasks_fuel","text":"Brockhaus, Sarah, Scheipl, Fabian, Hothorn, Torsten, Greven, Sonja (2015). “functional linear array model.” Statistical Modelling, 15(3), 279–300.","code":""},{"path":[]},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_phoneme.html","id":null,"dir":"Reference","previous_headings":"","what":"Phoneme Classification Task — mlr_tasks_phoneme","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"task contains single functional covariate 5 equally big classes (aa, ao, dcl, iy, sh). aim predict class phoneme functional, log-periodogram. subset full dataset, contained package fda.usc.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_phoneme.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"R6::R6Class inheriting mlr3::TaskClassif.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_phoneme.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"phoneme\") tsk(\"phoneme\")"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_phoneme.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"Task type: “classif” Dimensions: 250x2 Properties: “multiclass” Missings: FALSE Target: “class” Features: “X”","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/mlr_tasks_phoneme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phoneme Classification Task — mlr_tasks_phoneme","text":"Ferraty, Frédric, Vieu, Philippe (2003). “Curves discrimination: nonparametric functional approach.” Computational Statistics & Data Analysis, 44(1-2), 161–173.","code":""},{"path":[]},{"path":"https://mlr3fda.mlr-org.com/dev/reference/phoneme.html","id":null,"dir":"Reference","previous_headings":"","what":"The phoneme dataset — phoneme","title":"The phoneme dataset — phoneme","text":"See mlr_tasks_phoneme description dataset.","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/reference/phoneme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The phoneme dataset — phoneme","text":"","code":"data(phoneme)"},{"path":"https://mlr3fda.mlr-org.com/dev/reference/phoneme.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The phoneme dataset — phoneme","text":"data frame 250 rows 2 variables","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/news/index.html","id":"mlr3fda-development-version","dir":"Changelog","previous_headings":"","what":"mlr3fda (development version)","title":"mlr3fda (development version)","text":"mlr3fda now depends R 4.1.0 instead R 3.1.0 reflect tf requiring 4.1.0 New PipeOp: PipeOpFDATsfeatures","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/news/index.html","id":"mlr3fda-020","dir":"Changelog","previous_headings":"","what":"mlr3fda 0.2.0","title":"mlr3fda 0.2.0","text":"CRAN release: 2024-07-22 PipeOpFDACor PipeOpFDAScaleRange mlr3fda now depends mlr3pipelines","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/news/index.html","id":"mlr3fda-011","dir":"Changelog","previous_headings":"","what":"mlr3fda 0.1.1","title":"mlr3fda 0.1.1","text":"CRAN release: 2024-04-09 Fix CRAN issues","code":""},{"path":"https://mlr3fda.mlr-org.com/dev/news/index.html","id":"mlr3fda-010","dir":"Changelog","previous_headings":"","what":"mlr3fda 0.1.0","title":"mlr3fda 0.1.0","text":"CRAN release: 2024-04-04 Initial CRAN release.","code":""}]
